"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[259],{22223:(e,n,t)=>{t.d(n,{A5:()=>i,q1:()=>a});let i=[{id:"quantum-computing-basics",title:"Introduction to Quantum Computing: From Qubits to Quantum Algorithms",excerpt:"A comprehensive guide to understanding the fundamentals of quantum computing, including qubits, superposition, and quantum algorithms.",content:"\n# Introduction to Quantum Computing\n\nQuantum computing represents a paradigm shift in computational power, leveraging the principles of quantum mechanics to process information in ways that classical computers cannot.\n\n## What are Qubits?\n\nUnlike classical bits that can only be in states 0 or 1, qubits can exist in a superposition of both states simultaneously. This property allows quantum computers to process exponentially more information than classical computers.\n\n## Key Quantum Principles\n\n1. **Superposition**: Qubits can be in multiple states at once\n2. **Entanglement**: Qubits can be correlated in ways that classical bits cannot\n3. **Interference**: Quantum states can interfere constructively or destructively\n\n## Quantum Algorithms\n\nSome of the most famous quantum algorithms include:\n- Shor's algorithm for factoring large numbers\n- Grover's algorithm for unstructured search\n- Quantum Fourier Transform\n\n## Example: Basic Quantum Circuit\n\nHere's a simple example of a quantum circuit using Qiskit:\n\n```python\nfrom qiskit import QuantumCircuit, Aer, execute\nfrom qiskit.visualization import plot_histogram\n\n# Create a quantum circuit with 2 qubits\nqc = QuantumCircuit(2, 2)\n\n# Apply Hadamard gate to first qubit (creates superposition)\nqc.h(0)\n\n# Apply CNOT gate (entangles the qubits)\nqc.cx(0, 1)\n\n# Measure both qubits\nqc.measure([0, 1], [0, 1])\n\n# Execute the circuit\nbackend = Aer.get_backend('qasm_simulator')\njob = execute(qc, backend, shots=1000)\nresult = job.result()\n\n# Get the results\ncounts = result.get_counts(qc)\nprint(\"Results:\", counts)\n```\n\n## Current State and Future\n\nWhile quantum computers are still in their infancy, companies like IBM, Google, and startups are making significant progress in building practical quantum systems.\n    ",date:"2024-01-15",author:"Mada Kasasi",tags:["Quantum Computing","Algorithms","Physics"],category:"Technology",readTime:8,featured:!0,imageUrl:"https://images.unsplash.com/photo-1635070041078-e363dbe005cb?w=600&h=400&fit=crop"},{id:"cpp-performance-optimization",title:"Advanced C++ Performance Optimization Techniques",excerpt:"Deep dive into C++ optimization strategies, from memory management to compiler optimizations and modern C++ features.",content:"\n# Advanced C++ Performance Optimization\n\nC++ is renowned for its performance capabilities, but achieving optimal performance requires understanding both the language and the underlying hardware.\n\n## Memory Management\n\n### Smart Pointers\nModern C++ provides smart pointers that automatically manage memory:\n- `std::unique_ptr` for exclusive ownership\n- `std::shared_ptr` for shared ownership\n- `std::weak_ptr` for non-owning references\n\n### Memory Layout\nUnderstanding cache-friendly data structures is crucial:\n- Structure of Arrays (SoA) vs Array of Structures (AoS)\n- Cache line alignment\n- Memory pooling\n\n## Compiler Optimizations\n\n### Inlining\nThe compiler can inline functions to reduce function call overhead:\n\n```cpp\ninline int add(int a, int b) {\n    return a + b;\n}\n```\n\n### Loop Optimizations\n- Loop unrolling\n- Vectorization\n- Loop fusion and fission\n\n## Modern C++ Features\n\n### Move Semantics\nMove semantics allow efficient transfer of resources:\n\n```cpp\nstd::vector<int> createVector() {\n    std::vector<int> v = {1, 2, 3, 4, 5};\n    return v; // Move constructor called\n}\n```\n\n### Constexpr\nCompile-time evaluation for better performance:\n\n```cpp\nconstexpr int factorial(int n) {\n    return (n <= 1) ? 1 : n * factorial(n - 1);\n}\n```\n\n## Example: Performance-Optimized Class\n\nHere's an example of a performance-optimized class:\n\n```cpp\n#include <memory>\n#include <vector>\n\nclass OptimizedContainer {\nprivate:\n    std::unique_ptr<int[]> data_;\n    size_t size_;\n    \npublic:\n    // Use move constructor for efficient transfers\n    OptimizedContainer(OptimizedContainer&& other) noexcept\n        : data_(std::move(other.data_))\n        , size_(other.size_) {\n        other.size_ = 0;\n    }\n    \n    // Reserve space to avoid reallocations\n    void reserve(size_t capacity) {\n        if (capacity > size_) {\n            auto new_data = std::make_unique<int[]>(capacity);\n            std::copy(data_.get(), data_.get() + size_, new_data.get());\n            data_ = std::move(new_data);\n        }\n    }\n};\n```\n\n## Profiling and Benchmarking\n\nTools like Valgrind, perf, and Google Benchmark help identify performance bottlenecks and measure improvements.\n    ",date:"2024-01-10",author:"Mada Kasasi",tags:["C++","Performance","Optimization"],category:"Programming",readTime:12,featured:!0,imageUrl:"https://images.unsplash.com/photo-1555066931-4365d14bab8c?w=600&h=400&fit=crop"},{id:"ai-robotics-integration",title:"Integrating AI with Robotics: A Practical Approach",excerpt:"Exploring the intersection of artificial intelligence and robotics, from computer vision to autonomous navigation.",content:"\n# Integrating AI with Robotics\n\nThe integration of AI and robotics is revolutionizing automation, enabling robots to perform complex tasks in unstructured environments.\n\n## Computer Vision in Robotics\n\n### Object Detection\nModern object detection algorithms like YOLO and Faster R-CNN enable robots to identify and locate objects in their environment.\n\n### Pose Estimation\nUnderstanding the 3D pose of objects is crucial for manipulation tasks:\n- 6-DOF pose estimation\n- Multi-view geometry\n- Depth sensing\n\n## Path Planning and Navigation\n\n### SLAM (Simultaneous Localization and Mapping)\nSLAM algorithms allow robots to build maps of unknown environments while tracking their position:\n- Visual SLAM\n- LiDAR SLAM\n- Hybrid approaches\n\n### Motion Planning\nAlgorithms for planning collision-free paths:\n- RRT (Rapidly-exploring Random Trees)\n- PRM (Probabilistic Roadmaps)\n- Optimization-based methods\n\n## Machine Learning for Control\n\n### Reinforcement Learning\nRL enables robots to learn complex behaviors through trial and error:\n- Policy gradient methods\n- Q-learning\n- Actor-critic methods\n\n### Imitation Learning\nLearning from human demonstrations:\n- Behavioral cloning\n- Inverse reinforcement learning\n- Generative adversarial imitation learning\n\n## Example: Basic Robot Control\n\nHere's a simple example of robot control using Python:\n\n```python\nimport numpy as np\nfrom scipy.spatial.transform import Rotation\n\nclass RobotController:\n    def __init__(self):\n        self.position = np.zeros(3)\n        self.orientation = Rotation.from_quat([0, 0, 0, 1])\n    \n    def move_to_position(self, target_position):\n        # Calculate path to target\n        direction = target_position - self.position\n        distance = np.linalg.norm(direction)\n        \n        if distance > 0.01:  # Threshold for reaching target\n            # Move towards target\n            step_size = min(0.1, distance)\n            self.position += (direction / distance) * step_size\n            return False  # Not yet at target\n        return True  # Reached target\n    \n    def get_pose(self):\n        return {\n            'position': self.position,\n            'orientation': self.orientation.as_quat()\n        }\n```\n\n## Real-world Applications\n\n- Autonomous vehicles\n- Industrial automation\n- Healthcare robotics\n- Space exploration\n\n## Challenges and Future Directions\n\n- Safety and reliability\n- Generalization across environments\n- Human-robot interaction\n- Ethical considerations\n    ",date:"2024-01-05",author:"Mada Kasasi",tags:["AI","Robotics","Computer Vision","Machine Learning"],category:"Technology",readTime:10,featured:!1,imageUrl:"https://images.unsplash.com/photo-1485827404703-89b55fcc595e?w=600&h=400&fit=crop"},{id:"python-fastapi-best-practices",title:"Building Scalable APIs with FastAPI: Best Practices and Patterns",excerpt:"Learn how to build high-performance, scalable APIs using FastAPI with modern Python practices and design patterns.",content:'\n# Building Scalable APIs with FastAPI\n\nFastAPI has become the go-to framework for building modern Python APIs due to its performance, automatic documentation, and type safety.\n\n## Project Structure\n\nA well-organized FastAPI project should follow a clear structure:\n```\napp/\n├── main.py\n├── api/\n│   ├── v1/\n│   │   ├── endpoints/\n│   │   └── api.py\n├── core/\n│   ├── config.py\n│   └── security.py\n├── models/\n├── schemas/\n├── services/\n└── utils/\n```\n\n## Dependency Injection\n\nFastAPI\'s dependency injection system promotes clean, testable code:\n```python\nfrom fastapi import Depends\nfrom sqlalchemy.orm import Session\n\ndef get_db():\n    db = SessionLocal()\n    try:\n        yield db\n    finally:\n        db.close()\n\n@app.get("/users/")\ndef read_users(db: Session = Depends(get_db)):\n    return db.query(User).all()\n```\n\n## Error Handling\n\nImplement comprehensive error handling:\n```python\nfrom fastapi import HTTPException\n\n@app.get("/items/{item_id}")\ndef read_item(item_id: int):\n    if item_id not in items:\n        raise HTTPException(status_code=404, detail="Item not found")\n    return items[item_id]\n```\n\n## Background Tasks\n\nUse background tasks for long-running operations:\n```python\nfrom fastapi import BackgroundTasks\n\ndef send_email(email: str, message: str):\n    # Send email logic\n    pass\n\n@app.post("/send-notification/")\ndef send_notification(\n    email: str, \n    message: str, \n    background_tasks: BackgroundTasks\n):\n    background_tasks.add_task(send_email, email, message)\n    return {"message": "Notification sent"}\n```\n\n## Testing\n\nComprehensive testing with pytest:\n```python\nfrom fastapi.testclient import TestClient\n\nclient = TestClient(app)\n\ndef test_read_item():\n    response = client.get("/items/1")\n    assert response.status_code == 200\n    assert response.json() == {"id": 1, "name": "Test Item"}\n```\n\n## Performance Optimization\n\n- Use async/await for I/O operations\n- Implement caching with Redis\n- Use connection pooling for databases\n- Monitor with APM tools\n    ',date:"2023-12-28",author:"Mada Kasasi",tags:["Python","FastAPI","API Design","Backend"],category:"Programming",readTime:15,featured:!1,imageUrl:"https://images.unsplash.com/photo-1555066931-4365d14bab8c?w=600&h=400&fit=crop"}],a=i.filter(e=>e.featured);i.slice(0,3)},47864:(e,n,t)=>{t.d(n,{Y:()=>c});var i=t(95155),a=t(40288),o=t(12115),r=t(32237),s=t(90185);function c(){let[e,n]=(0,o.useState)(!1),{theme:t,toggleTheme:c}=(0,s.D)();(0,o.useEffect)(()=>{let e=()=>{n(window.scrollY>50)};return window.addEventListener("scroll",e),()=>window.removeEventListener("scroll",e)},[]);let l=e=>{let n=document.getElementById(e);n&&n.scrollIntoView({behavior:"smooth"})};return(0,i.jsx)(a.P.header,{initial:{y:-100},animate:{y:0},className:"fixed top-0 left-0 right-0 z-50 transition-all duration-300 ".concat(e?"bg-background/80 backdrop-blur-md border-b border-border":"bg-transparent"),children:(0,i.jsxs)("nav",{className:"container flex items-center justify-between py-4",children:[(0,i.jsx)(a.P.div,{whileHover:{scale:1.05},className:"text-xl font-bold gradient-text cursor-pointer",onClick:()=>l("hero"),children:"MK"}),(0,i.jsx)("div",{className:"hidden md:flex items-center space-x-8",children:["About","Projects","Blog","Contact"].map(e=>(0,i.jsx)(a.P.button,{whileHover:{scale:1.05},whileTap:{scale:.95},onClick:()=>l(e.toLowerCase()),className:"text-text-secondary hover:text-text-primary transition-colors duration-200",children:e},e))}),(0,i.jsx)(a.P.button,{whileHover:{scale:1.1},whileTap:{scale:.9},onClick:c,className:"p-2 rounded-lg bg-background-secondary hover:bg-background-tertiary transition-colors duration-200",children:"dark"===t?(0,i.jsx)(r.Wh$,{size:20}):(0,i.jsx)(r.hkc,{size:20})})]})})}},65589:(e,n,t)=>{t.d(n,{t:()=>r});var i=t(95155),a=t(12115),o=t(32237);class r extends a.Component{static getDerivedStateFromError(e){return{hasError:!0,error:e}}componentDidCatch(e,n){}render(){return this.state.hasError?this.props.fallback?this.props.fallback:(0,i.jsx)("div",{className:"min-h-screen flex items-center justify-center bg-background",children:(0,i.jsxs)("div",{className:"text-center max-w-md mx-auto p-8",children:[(0,i.jsx)("div",{className:"mb-6",children:(0,i.jsx)(o.eHT,{className:"mx-auto text-red-500",size:64})}),(0,i.jsx)("h2",{className:"text-2xl font-bold text-text-primary mb-4",children:"Something went wrong"}),(0,i.jsx)("p",{className:"text-text-secondary mb-6",children:"We're sorry, but something unexpected happened. Please try refreshing the page."}),(0,i.jsxs)("button",{onClick:()=>window.location.reload(),className:"inline-flex items-center gap-2 px-6 py-3 bg-primary text-white rounded-lg hover:bg-primary-dark transition-colors duration-200",children:[(0,i.jsx)(o.jTZ,{size:16}),"Refresh Page"]}),!1]})}):this.props.children}constructor(e){super(e),this.state={hasError:!1}}}},75922:(e,n,t)=>{t.d(n,{w:()=>r});var i=t(95155),a=t(40288),o=t(32237);function r(){let e=new Date().getFullYear(),n=[{name:"GitHub",url:"https://github.com/madakasasi",icon:o.BR8},{name:"Email",url:"mailto:mada@kasasi.dev",icon:o.pHD},{name:"Twitter",url:"https://twitter.com/madakasasi",icon:o.TC4},{name:"Instagram",url:"https://instagram.com/madakasasi",icon:o.eCe}];return(0,i.jsx)("footer",{className:"bg-background border-t border-border",children:(0,i.jsx)("div",{className:"container py-12",children:(0,i.jsxs)("div",{className:"flex flex-col items-center justify-center space-y-6",children:[(0,i.jsx)(a.P.div,{initial:{opacity:0,y:20},whileInView:{opacity:1,y:0},transition:{duration:.6},viewport:{once:!0},className:"flex items-center space-x-6",children:n.map(e=>(0,i.jsx)(a.P.a,{href:e.url,target:"_blank",rel:"noopener noreferrer",whileHover:{scale:1.2,y:-2},whileTap:{scale:.9},className:"text-text-tertiary hover:text-primary transition-colors duration-200","aria-label":e.name,children:(0,i.jsx)(e.icon,{size:20})},e.name))}),(0,i.jsx)(a.P.div,{initial:{opacity:0,y:20},whileInView:{opacity:1,y:0},transition:{duration:.6,delay:.2},viewport:{once:!0},className:"text-center",children:(0,i.jsxs)("p",{className:"text-text-tertiary text-sm flex items-center justify-center gap-2",children:["\xa9 ",e," Mada Kasasi. Built with",(0,i.jsx)(o.icx,{className:"text-red-500",size:14}),"using Next.js & Tailwind CSS"]})}),(0,i.jsx)(a.P.button,{initial:{opacity:0,y:20},whileInView:{opacity:1,y:0},transition:{duration:.6,delay:.4},viewport:{once:!0},whileHover:{scale:1.05},whileTap:{scale:.95},onClick:()=>window.scrollTo({top:0,behavior:"smooth"}),className:"text-text-tertiary hover:text-primary transition-colors duration-200 text-sm",children:"Back to Top ↑"})]})})})}},90185:(e,n,t)=>{t.d(n,{D:()=>s,ThemeProvider:()=>r});var i=t(95155),a=t(12115);let o=(0,a.createContext)({theme:"dark",setTheme:()=>null,toggleTheme:()=>null});function r(e){let{children:n,defaultTheme:t="dark",storageKey:r="portfolio-theme",...s}=e,[c,l]=(0,a.useState)(t),[m,d]=(0,a.useState)(!1);return((0,a.useEffect)(()=>{d(!0);let e=localStorage.getItem(r);e?l(e):l(window.matchMedia("(prefers-color-scheme: dark)").matches?"dark":"light")},[r]),(0,a.useEffect)(()=>{if(m){let e=window.document.documentElement;e.classList.remove("light","dark"),e.classList.add(c),localStorage.setItem(r,c)}},[c,m,r]),m)?(0,i.jsx)(o.Provider,{...s,value:{theme:c,setTheme:e=>{l(e)},toggleTheme:()=>{l(e=>"dark"===e?"light":"dark")}},children:n}):(0,i.jsx)("div",{className:"dark",children:n})}let s=()=>{let e=(0,a.useContext)(o);if(void 0===e)throw Error("useTheme must be used within a ThemeProvider");return e}}}]);